{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","alt","src","CardList","robots","map","user","i","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","ErrorBoundry","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","target","value","fetch","then","response","json","users","filteredRobots","filter","robot","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gQAaeA,G,MAXF,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,GACzB,OACI,sBAAKC,UAAU,sDAAf,UAEI,qBAAKC,IAAI,SAASC,IAAG,+BAA0BH,EAA1B,mBACrB,6BAAKF,IACL,4BAAIC,SCaDK,EAnBE,SAAC,GAAe,IAAbC,EAAY,EAAZA,OAChB,OACI,8BAEAA,EAAOC,KACH,SAACC,EAAMC,GACH,OACC,cAAC,EAAD,CAEAR,GAAIK,EAAOG,GAAGR,GACdF,KAAMO,EAAOG,GAAGV,KAChBC,MAAOM,EAAOG,GAAGT,OAHZS,SCAPC,EAVG,SAAC,GAAkC,EAAhCC,YAAiC,IAApBC,EAAmB,EAAnBA,aAC9B,OACI,qBAAKV,UAAU,MAAf,SACI,uBAAOA,UAAU,mCAAmCW,KAAK,SAASC,YAAY,kBAC9EC,SAAUH,OCIPI,EARA,SAACC,GACZ,OACI,qBAAKC,MAAO,CAAEC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,SAAtE,SACKJ,EAAMK,YCoBJC,E,kDApBX,WAAYN,GAAQ,IAAD,8BACf,cAAMA,IACDO,MAAQ,CACTC,UAAU,GAHC,E,8DAQDC,EAAOC,GACrBC,KAAKC,SAAS,CAAEJ,UAAU,M,+BAI1B,OAAIG,KAAKJ,MAAMC,SACJ,2DAEJG,KAAKX,MAAMK,a,GAjBCQ,aC8CZC,G,wDAvCb,aAAgB,IAAD,8BACb,gBAaFC,eAAiB,SAACC,GAChB,EAAKJ,SAAS,CAAElB,YAAasB,EAAMC,OAAOC,SAb1C,EAAKX,MAAQ,CACblB,OAAQ,GACRK,YAAa,IAJA,E,gEAQM,IAAD,OACpByB,MAAM,8CACJC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UACzBF,MAAK,SAAAG,GAAK,OAAI,EAAKX,SAAS,CAACvB,OAAQkC,S,+BAO9B,IAAD,EACsBZ,KAAKJ,MAA7BlB,EADE,EACFA,OAAQK,EADN,EACMA,YACT8B,EAAiBnC,EAAOoC,QAAO,SAAAC,GAC/B,OAAOA,EAAM5C,KAAK6C,cAAcC,SAASlC,EAAYiC,kBAG3D,OAAQtC,EAAOwC,OAGb,sBAAK5C,UAAU,KAAf,UACE,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWU,aAAcgB,KAAKI,iBAC9B,cAAC,EAAD,UACE,cAAC,EAAD,UACE,cAAC,EAAD,CAAU1B,OAAQmC,WAP1B,kD,GA1BgBX,cCIHiB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCSdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAGFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.29d14b65.chunk.js","sourcesContent":["import './card.css';\r\n\r\nconst Card = ({ name, email, id }) => {\r\n    return (\r\n        <div className='bg-light-green tc dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n            {/* <img src={'./robo-small.png'} alt='robot'></img> */}\r\n            <img alt='robots' src={`https://robohash.org/${id}?size=200x200`} />\r\n            <h2>{name}</h2>\r\n            <p>{email}</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Card;","import Card from './Card';\r\n\r\nconst CardList = ( {robots}) => {\r\n    return (\r\n        <div>\r\n        {\r\n        robots.map(\r\n            (user, i) => {\r\n                return (\r\n                 <Card \r\n                 key={i} \r\n                 id={robots[i].id} \r\n                 name={robots[i].name} \r\n                 email={robots[i].email}/>\r\n                );\r\n            })\r\n        }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CardList;","const SearchBox = ({ searchfield, searchChange }) => {\r\n    return (\r\n        <div className='pa2'>\r\n            <input className='pa3 ba b--green bg-lightest-blue' type='search' placeholder='Search Robots..' \r\n            onChange={searchChange}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SearchBox;","const Scroll = (props) => {\r\n    return (\r\n        <div style={{ overflowY: 'scroll', border: '5px solid black', height: '600px'}}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Scroll;","import React, {Component } from 'react';\r\n\r\nclass ErrorBoundry extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            hasError: false\r\n        }\r\n    }\r\n\r\n\r\n    componentDidCatch(error, info) {\r\n        this.setState({ hasError: true})\r\n    }\r\n\r\n    render() {\r\n        if (this.state.hasError) {\r\n            return <h1>Oooops. Thsts is not good</h1>\r\n        }\r\n        return this.props.children\r\n    }\r\n}\r\n\r\nexport default ErrorBoundry;","\nimport React, { Component } from \"react\";\nimport CardList from '../components/CardList';\nimport SearchBox from '../components/SearchBox';\nimport Scroll from '../components/Scroll';\nimport ErrorBoundry from '../components/ErrorBoundry';\nimport './App.css';\n\nclass App extends Component {\n  constructor () {\n    super()\n    this.state = {\n    robots: [],\n    searchfield: ''\n    }\n  }\n\n  componentDidMount() {\n  fetch('https://jsonplaceholder.typicode.com/users')\n   .then(response => response.json())\n    .then(users => this.setState({robots: users}))\n  }\n\n  onSearchChange = (event) => {\n    this.setState({ searchfield: event.target.value })\n  }\n\n  render() {\n  const {robots, searchfield } = this.state;\n  const filteredRobots = robots.filter(robot =>{\n        return robot.name.toLowerCase().includes(searchfield.toLowerCase());\n      })\n\n  return !robots.length ?\n  <h1> Loading... </h1> :\n  (\n    <div className='tc'>\n      <h1 className='f1'>RoboFriends</h1>\n      <SearchBox searchChange={this.onSearchChange}/>\n      <Scroll>\n        <ErrorBoundry>\n          <CardList robots={filteredRobots}/>\n        </ErrorBoundry>\n      </Scroll>\n    </div>\n  );\n}\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n//import {robots} from './robots';\n\n/* ReactDOM.render(\n  <React.StrictMode>\n    <App/>\n    <h1>Hello World</h1>\n  </React.StrictMode>,\n  document.getElementById('root')\n); */\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}